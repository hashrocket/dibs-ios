#import <Availability.h>

#ifndef __IPHONE_3_0
#warning "This project uses features only available in iOS SDK 3.0 and later."
#endif

#ifdef __OBJC__
  #import <UIKit/UIKit.h>
  #import <Foundation/Foundation.h>
  #import <QuartzCore/QuartzCore.h>
  #import <SystemConfiguration/SystemConfiguration.h>
  #import <MobileCoreServices/MobileCoreServices.h>
#endif

#import <FacebookSDK/FacebookSDK.h>
#import <Funcussion/NSArray+Funcussion.h>
#import <Funcussion/NSDictionary+Funcussion.h>
#import <PXEngine/PXEngine.h>
#import "UIView+Constraints.h"
#import "Environment.h"
#import "UserDataStore.h"
#import "NotificationKonstants.h"
#import "DibsClient.h"

static CGRect windowBounds() {
  return [[UIScreen mainScreen] bounds];
}

static NSString* strf(NSString *format, ...) {
  NSString *contents;
  va_list args;
  va_start(args, format);
  contents = [[NSString alloc] initWithFormat:format arguments:args];
  va_end(args);
  return contents;
}

static void postNotification(NSString *notificationName) {
  [[NSNotificationCenter defaultCenter] postNotificationName:notificationName
                                                      object:nil];
}

static void postNotificationObject(NSString *notificationName, id object) {
  [[NSNotificationCenter defaultCenter] postNotificationName:notificationName
                                                      object:object];
}

static void simpleAlert(NSString *title, NSString *message) {
  UIAlertView *alert = [[UIAlertView alloc] initWithTitle:title message:message delegate:nil
                                        cancelButtonTitle:@"OK" otherButtonTitles:nil];
  [alert show];
}

#pragma mark - debug macros

#define log_frame(view) \
NSLog(@"frame: ({x: %f, y: %f} {w: %f, h: %f})", \
view.frame.origin.x,view.frame.origin.y, \
view.frame.size.width,view.frame.size.height)

#define log_bounds(view) \
NSLog(@"bounds: ({x: %f, y: %f} {w: %f, h: %f})", \
view.bounds.origin.x,view.bounds.origin.y, \
view.bounds.size.width,view.bounds.size.height)

#define log_size(size) \
NSLog(@"size: ({w: %f, h: %f})", size.width,size.height)

static void log_point(CGPoint point) {
  NSLog(@"point: ({x: %f, y: %f})", point.x, point.y);
}

#define log_rect(rect) \
NSLog(@"rect: ({x: %f, y: %f} {w: %f, h: %f})", \
rect.origin.x,rect.origin.y, rect.size.width,rect.size.height)

#define log_object(object) \
NSLog(@"%@: %@", [object class], object);

#define log_float(float) \
NSLog(@"float: %f", float);

#define stroke_view(view) \
[view.layer setBorderColor:[[UIColor redColor] CGColor]]; \
[view.layer setBorderWidth:1]